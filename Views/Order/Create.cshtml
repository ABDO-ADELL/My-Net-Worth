@model PRISM.Models.Order

@{
    ViewData["Title"] = "Create Order";
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-11 col-xl-10">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="fw-bold mb-1">
                        <i class="fas fa-shopping-cart text-primary me-2"></i>Create New Order
                    </h2>
                    <p class="text-muted mb-0">Fill in the order details and add items to the cart</p>
                </div>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Orders
                </a>
            </div>

            <form asp-action="Create" id="orderForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <!-- Order Information Card -->
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-header bg-gradient-primary text-white py-3">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Order Information
                        </h5>
                    </div>
                    <div class="card-body p-4">
                        <div class="row g-4">
                            <div class="col-md-6">
                                <label asp-for="OrderName" class="form-label fw-semibold">
                                    <i class="fas fa-tag text-primary me-2"></i>Order Name
                                </label>
                                <input asp-for="OrderName" class="form-control form-control-lg" placeholder="e.g., Morning Sale #1234" />
                                <span asp-validation-for="OrderName" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="business_id" class="form-label fw-semibold">
                                    <i class="fas fa-building text-primary me-2"></i>Business
                                </label>
                                <select asp-for="business_id" class="form-select form-select-lg" asp-items="ViewBag.business_id" id="businessSelect">
                                    <option value="">-- Select Business --</option>
                                </select>
                                <span asp-validation-for="business_id" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="BranchId" class="form-label fw-semibold">
                                    <i class="fas fa-store text-primary me-2"></i>Branch
                                </label>
                                <select asp-for="BranchId" class="form-select form-select-lg" id="branchSelect" disabled>
                                    <option value="">-- Select Business First --</option>
                                </select>
                                <span asp-validation-for="BranchId" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="CustomerId" class="form-label fw-semibold">
                                    <i class="fas fa-user text-primary me-2"></i>Customer
                                </label>
                                <select asp-for="CustomerId" class="form-select form-select-lg" asp-items="ViewBag.CustomerId">
                                    <option value="">-- Select Customer --</option>
                                </select>
                                <span asp-validation-for="CustomerId" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Items Card -->
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-header bg-gradient-success text-white py-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-list-ul me-2"></i>Order Items
                            </h5>
                            <button type="button" class="btn btn-light btn-sm" id="addItemBtn" disabled>
                                <i class="fas fa-plus me-2"></i>Add Item
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-4">
                        <div id="itemsContainer">
                            <div class="text-center text-muted py-5">
                                <i class="fas fa-shopping-basket fa-3x mb-3 opacity-25"></i>
                                <p class="mb-0">No items added yet. Select a branch and click "Add Item" to start.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Total Summary Card -->
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-body p-4">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h5 class="mb-0 text-muted">Order Summary</h5>
                            </div>
                            <div class="col-md-4 text-end">
                                <h3 class="mb-0 fw-bold text-success">
                                    Total: <span id="totalAmount">$0.00</span>
                                </h3>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="d-flex justify-content-end gap-3 mb-5">
                    <a asp-action="Index" class="btn btn-lg btn-light px-4">
                        <i class="fas fa-times me-2"></i>Cancel
                    </a>
                    <button type="submit" class="btn btn-lg btn-primary px-5">
                        <i class="fas fa-check me-2"></i>Create Order
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let itemCounter = 0;
        let availableItems = @Html.Raw(Json.Serialize(ViewBag.Items));

        $(document).ready(function() {
            // Load branches when business is selected
            $('#businessSelect').change(function() {
                const businessId = $(this).val();
                $('#branchSelect').prop('disabled', true).html('<option value="">-- Loading Branches... --</option>');
                $('#addItemBtn').prop('disabled', true);
                $('#itemsContainer').html('<div class="text-center text-muted py-5"><i class="fas fa-shopping-basket fa-3x mb-3 opacity-25"></i><p class="mb-0">No items added yet. Select a branch and click "Add Item" to start.</p></div>');
                itemCounter = 0;
                calculateTotal();

                if (businessId) {
                    $.get('/Order/GetBranchesByBusiness', { businessId: businessId }, function(data) {
                        $('#branchSelect').empty().append('<option value="">-- Select Branch --</option>');
                        $.each(data, function(i, branch) {
                            $('#branchSelect').append($('<option></option>').val(branch.branchId).html(branch.name));
                        });
                        $('#branchSelect').prop('disabled', false);
                    });
                } else {
                    $('#branchSelect').html('<option value="">-- Select Business First --</option>');
                }
            });

            // Load items when branch is selected
            $('#branchSelect').change(function() {
                const branchId = $(this).val();
                $('#addItemBtn').prop('disabled', true);
                $('#itemsContainer').html('<div class="text-center text-muted py-5"><i class="fas fa-shopping-basket fa-3x mb-3 opacity-25"></i><p class="mb-0">No items added yet. Click "Add Item" to start.</p></div>');
                itemCounter = 0;
                calculateTotal();

                if (branchId) {
                    $.get('/Order/GetItemsByBranch', { branchId: branchId }, function(data) {
                        availableItems = data;
                        if (data.length > 0) {
                            $('#addItemBtn').prop('disabled', false);
                        } else {
                            $('#itemsContainer').html('<div class="alert alert-warning"><i class="fas fa-exclamation-triangle me-2"></i>No items available for this branch.</div>');
                        }
                    });
                } else {
                    availableItems = [];
                }
            });

            // Add item row
            $('#addItemBtn').click(function() {
                if (availableItems.length === 0) {
                    alert('Please select a branch first to load items.');
                    return;
                }
                if (itemCounter === 0) {
                    $('#itemsContainer').empty();
                }
                addItemRow();
            });

            // Calculate total on form submit
            $('#orderForm').submit(function(e) {
                if ($('.item-row').length === 0) {
                    e.preventDefault();
                    alert('Please add at least one item to the order.');
                    return false;
                }
                calculateTotal();
            });
        });

        function addItemRow() {
            const rowHtml = `
                <div class="item-row mb-3 p-3 bg-light rounded-3 border" data-row="${itemCounter}">
                    <div class="row g-3 align-items-center">
                        <div class="col-md-5">
                            <label class="form-label small text-muted mb-1">
                                <i class="fas fa-box me-1"></i>Item
                            </label>
                            <select name="itemIds" class="form-select item-select" data-row="${itemCounter}" required>
                                <option value="">-- Select Item --</option>
                                ${availableItems.map(item => `<option value="${item.id}" data-price="${item.sellPrice}">${item.name} - $${item.sellPrice.toFixed(2)}</option>`).join('')}
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label small text-muted mb-1">
                                <i class="fas fa-sort-numeric-up me-1"></i>Quantity
                            </label>
                            <input type="number" name="quantities" class="form-control quantity-input text-center"
                                   data-row="${itemCounter}" placeholder="Qty" min="1" value="1" required />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small text-muted mb-1">
                                <i class="fas fa-dollar-sign me-1"></i>Total
                            </label>
                            <input type="text" class="form-control item-total fw-bold text-success" readonly placeholder="$0.00" />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label small text-muted mb-1 invisible">Action</label>
                            <button type="button" class="btn btn-danger w-100 remove-item-btn">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;

            $('#itemsContainer').append(rowHtml);

            // Attach event handlers
            $(`.item-select[data-row="${itemCounter}"], .quantity-input[data-row="${itemCounter}"]`).on('change keyup', function() {
                updateItemTotal($(this).data('row'));
                calculateTotal();
            });

            $('.remove-item-btn').last().click(function() {
                $(this).closest('.item-row').remove();
                if ($('.item-row').length === 0) {
                    $('#itemsContainer').html('<div class="text-center text-muted py-5"><i class="fas fa-shopping-basket fa-3x mb-3 opacity-25"></i><p class="mb-0">No items added yet. Click "Add Item" to start.</p></div>');
                }
                calculateTotal();
            });

            itemCounter++;
            calculateTotal();
        }

        function updateItemTotal(rowNum) {
            const row = $(`.item-row[data-row="${rowNum}"]`);
            const price = parseFloat(row.find('.item-select option:selected').data('price')) || 0;
            const quantity = parseInt(row.find('.quantity-input').val()) || 0;
            const total = price * quantity;
            row.find('.item-total').val('$' + total.toFixed(2));
        }

        function calculateTotal() {
            let total = 0;
            $('.item-row').each(function() {
                const row = $(this);
                const price = parseFloat(row.find('.item-select option:selected').data('price')) || 0;
                const quantity = parseInt(row.find('.quantity-input').val()) || 0;
                total += price * quantity;
            });
            $('#totalAmount').text('$' + total.toFixed(2));
        }
    </script>
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .bg-gradient-success {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    }

    .card {
        border-radius: 15px;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .form-control, .form-select {
        border-radius: 8px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s;
    }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.15);
        }

    .item-row {
        transition: all 0.3s;
        border: 2px solid #e8e8e8 !important;
    }

        .item-row:hover {
            background-color: #f8f9ff !important;
            border-color: #667eea !important;
        }

    .btn {
        border-radius: 8px;
        transition: all 0.3s;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        }

    .text-success {
        color: #11998e !important;
    }

    .form-label {
        font-weight: 500;
        color: #4a5568;
    }
</style>